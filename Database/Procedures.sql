USE My_Application
SET DATEFORMAT DMY
--------------------------------------------------------------
-- TẠO PROCEDURE SELECT HỌC SINH CÓ ĐIỀU KIỆN (1 THAM SỐ ĐẦU VÀO, HIỂN THỊ TRÊN DATAGRIDVIEW)
-- THAM SỐ TRUYỀN VÀO CÓ THỂ LÀ: MÃ HS, HỌ, TÊN ĐỆM, TÊN, NGÀY SINH, ĐỊA CHỈ, EMAIL, GIỚI TÍNH
CREATE PROCEDURE SELECT_HOCSINH 
@PARAM NVARCHAR(100)
AS
BEGIN
	SELECT TENLOP, STT, HOCSINH.MAHS, 
				CASE
					WHEN LEN(DEM) > 0 THEN CONCAT(HO, ' ', DEM, ' ', TEN)
					ELSE CONCAT(HO, ' ', TEN)
				END AS HOTEN,
	FORMAT(NGAYSINH, 'dd/MM/yyyy') AS NGAYSINH, GIOITINH, EMAIL, DIACHI
	FROM HOCSINH LEFT JOIN XEPLOP ON  HOCSINH.MAHS = XEPLOP.MAHS
	WHERE UPPER(TENLOP) = UPPER(TRIM(@PARAM))
	OR	  UPPER(HOCSINH.MAHS) = UPPER(TRIM(@PARAM))
	OR	  UPPER(HO) LIKE UPPER(N'%' + TRIM(@PARAM) + N'%')	-- tìm theo họ
	OR	  UPPER(DEM) LIKE UPPER(N'%' + TRIM(@PARAM) + N'%')	-- tìm theo tên đệm
	OR	  UPPER(TEN) LIKE UPPER(N'%' + TRIM(@PARAM) + N'%')	-- tìm theo tên
	OR	  UPPER(CONCAT(HO, ' ', DEM, ' ', TEN)) LIKE UPPER(N'%' + TRIM(@PARAM) + N'%')	-- tìm theo họ tên đầy đủ (có tên đệm)
	OR    UPPER(CONCAT(HO, ' ', TEN)) LIKE UPPER(N'%' + TRIM(@PARAM) + N'%')	-- tìm theo họ tên đầy đủ (không tên đệm)
	OR    UPPER(CONCAT(DEM, ' ', TEN)) LIKE UPPER(N'%' + TRIM(@PARAM) + N'%')	-- tìm theo tên đệm và tên

	OR	  FORMAT(NGAYSINH, 'dd/MM/yyyy') = TRIM(@PARAM) -- vd: 06/06/2009
	OR	  FORMAT(NGAYSINH, 'd/M/yyyy') = TRIM(@PARAM) -- vd: 6/6/2009
	OR	  FORMAT(NGAYSINH, 'd/MM/yyyy') = TRIM(@PARAM) -- vd: 4/12/2009
	OR	  FORMAT(NGAYSINH, 'dd/M/yyyy') = TRIM(@PARAM) -- vd: 27/5/2009

	OR	  UPPER(DIACHI) LIKE UPPER(N'%' + TRIM(@PARAM) + N'%')
	OR	  UPPER(EMAIL) LIKE UPPER('%' + TRIM(@PARAM) + '%')
	OR	  UPPER(GIOITINH) LIKE UPPER(TRIM(@PARAM))
	ORDER BY TENLOP ASC, STT ASC
END

DROP PROC SELECT_HOCSINH

EXEC SELECT_HOCSINH '10a3'
EXEC SELECT_HOCSINH N'Nguyễn minh anh'
EXEC SELECT_HOCSINH N'Trần'
EXEC SELECT_HOCSINH N'bảo'
EXEC SELECT_HOCSINH N'minh anh'
EXEC SELECT_HOCSINH N'văn nam'
EXEC SELECT_HOCSINH N'hs1120'
EXEC SELECT_HOCSINH '02/4/2009'
EXEC SELECT_HOCSINH N'TPHCM'
EXEC SELECT_HOCSINH N'hs1120'
EXEC SELECT_HOCSINH N'nữ'
EXEC SELECT_HOCSINH '%' -- select toàn bộ bảng


--------------------------------------------------------------
-- TẠO PROCEDURE SELECT THÔNG TIN HỌC SINH DỰA VÀO MAHS (HIỂN THỊ THÔNG TIN CỤ THỂ KHI DOUBLE CLICK)
CREATE PROCEDURE SELECT_HOCSINH_DBCLICK @MAHS CHAR(6)
AS
BEGIN
	SELECT HO, DEM, TEN, NGAYSINH, GIOITINH, EMAIL, DIACHI
	FROM HOCSINH
	WHERE MAHS = @MAHS
END

DROP PROC SELECT_HOCSINH_DBCLICK

EXEC SELECT_HOCSINH_DBCLICK 'HS1125'

--------------------------------------------------------------
-- TẠO PROCEDURE INSERT BẢNG HOCSINH
CREATE PROCEDURE INSERT_HOCSINH
	@HO	NVARCHAR(20),
	@DEM NVARCHAR(40),
	@TEN NVARCHAR(20),
	@NGAYSINH SMALLDATETIME,
	@GIOITINH NVARCHAR(5),
	@EMAIL VARCHAR(50),
	@DIACHI NVARCHAR(100)
AS
BEGIN
	INSERT INTO HOCSINH (MAHS, HO, DEM, TEN, NGAYSINH, GIOITINH, EMAIL, DIACHI) VALUES (
	'HS' + CAST(NEXT VALUE FOR STT AS CHAR(4)), 
	@HO, @DEM, @TEN,
	@NGAYSINH,
	@GIOITINH,
	@EMAIL,
	@DIACHI
	);

	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END

exec INSERT_HOCSINH N'Trần', N'Ngọc', N'Sơn', '15/3/2009', 'Nam', 'dtd@gmail.com', 'TPHCM'


SELECT * FROM HOCSINH

--------------------------------------------------------------
-- TẠO PROCEDURE UPDATE THÔNG TIN HỌC SINH
CREATE PROCEDURE UPDATE_HOCSINH @MAHS CHAR(6),
	@HO	NVARCHAR(20),
	@DEM NVARCHAR(40),
	@TEN NVARCHAR(20),
	@NGAYSINH SMALLDATETIME,
	@GIOITINH NVARCHAR(5),
	@EMAIL VARCHAR(50),
	@DIACHI NVARCHAR(100)
AS
BEGIN
	UPDATE HOCSINH
	SET
		HO = @HO,
		DEM = @DEM,
		TEN = @TEN,
		NGAYSINH = @NGAYSINH,
		GIOITINH = @GIOITINH,
		EMAIL = @EMAIL,
		DIACHI = @DIACHI
	WHERE MAHS = @MAHS

	-- KIỂM TRA ĐÃ UPDATE THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi update thành công
	ELSE RETURN 0	-- Trả về 0 khi update không thành công
END

--------------------------------------------------------------
-- TẠO PROCEDURE XÓA THÔNG TIN HỌC SINH DỰA VÀO MAHS
CREATE PROCEDURE DELETE_HOCSINH @MAHS CHAR(6)
AS
BEGIN
	DECLARE @TENLOP VARCHAR(5), @STT INT
	SELECT @TENLOP = (SELECT TENLOP FROM XEPLOP WHERE MAHS = @MAHS)
	SELECT @STT = (SELECT STT FROM XEPLOP WHERE MAHS = @MAHS)
	-- Cập nhật bảng điểm môn học của học sinh bị xóa: Điểm các môn của học sinh ở lớp cũ sẽ bị xóa
	DELETE FROM BANGDIEM_MONHOC WHERE TENLOP = @TENLOP AND STT = @STT
	-- Cập nhật danh sách lớp: Xóa học sinh khỏi lớp
	DELETE FROM XEPLOP
	WHERE MAHS = @MAHS
	-- Xóa học sinh khỏi danh sách học sinh
	DELETE FROM HOCSINH
	WHERE MAHS = @MAHS

	-- KIỂM TRA ĐÃ DELETE THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi delete thành công
	ELSE RETURN 0	-- Trả về 0 khi delete không thành công
END
DROP PROC DELETE_HOCSINH 

--------------------------------------------------------------
-- TẠO PROCEDURE INSERT XẾP LỚP
CREATE PROCEDURE INSERT_XEPLOP 
	@TENLOP VARCHAR(5),
	@STT INT,
	@MAHS CHAR(6)
AS
BEGIN
	INSERT INTO XEPLOP VALUES (@TENLOP, @STT, @MAHS)

	DECLARE @TENMON NVARCHAR(50);
	DECLARE TENMON_CURSOR CURSOR FOR
		SELECT TENMON FROM MONHOC;
	OPEN TENMON_CURSOR;
	FETCH NEXT FROM TENMON_CURSOR INTO @TENMON;
	WHILE @@FETCH_STATUS = 0
	BEGIN
		EXEC INSERT_BANGDIEM_MONHOC @TENLOP, @TENMON , 'I', @STT, NULL, NULL, NULL
		EXEC INSERT_BANGDIEM_MONHOC @TENLOP, @TENMON, 'II', @STT, NULL, NULL, NULL
		FETCH NEXT FROM TENMON_CURSOR INTO @TENMON;
	END
	CLOSE TENMON_CURSOR;
	DEALLOCATE TENMON_CURSOR;

	-- KIỂM TRA ĐÃ UPDATE THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi update thành công
	ELSE RETURN 0	-- Trả về 0 khi update không thành công
END
DROP PROC INSERT_XEPLOP
SELECT * FROM XEPLOP

--------------------------------------------------------------
-- TẠO PROCEDURE DELETE XẾP LỚP
CREATE PROCEDURE DELETE_XEPLOP 
	@MAHS CHAR(6),
	@TENLOP VARCHAR(5)
AS
BEGIN
	DECLARE @STT INT
	SELECT @STT = (SELECT STT FROM XEPLOP WHERE MAHS = @MAHS)
	-- Cập nhật bảng điểm môn học của học sinh bị xóa: Điểm các môn của học sinh ở lớp cũ sẽ bị xóa
	DELETE FROM BANGDIEM_MONHOC WHERE TENLOP = @TENLOP AND STT = @STT
	-- Cập nhật danh sách lớp
	DELETE FROM XEPLOP
	WHERE MAHS = @MAHS
	-- Cập nhật sĩ số lớp 
	UPDATE LOP
	SET SISO = (SELECT COUNT(*) FROM XEPLOP WHERE TENLOP = @TENLOP)
	WHERE TENLOP = @TENLOP
	-- KIỂM TRA ĐÃ UPDATE THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi update thành công
	ELSE RETURN 0	-- Trả về 0 khi update không thành công
END
DROP PROC DELETE_XEPLOP

--------------------------------------------------------------
-- TẠO PROCEDURE UPDATE LỚP CHO HỌC SINH VỚI 3 THAM SỐ: MÃ HS, TÊN LỚP, STT
CREATE PROCEDURE UPDATE_XEPLOP 
	@TENLOP VARCHAR(5),
	@STT INT,
	@MAHS CHAR(6)
AS
BEGIN
	DECLARE @TENLOP_TRUOC VARCHAR(5)
	SELECT @TENLOP_TRUOC = (SELECT TENLOP FROM XEPLOP WHERE MAHS = @MAHS)
	----
	IF (@TENLOP_TRUOC IS NULL)
	BEGIN
		EXEC INSERT_XEPLOP @TENLOP, @STT, @MAHS
	END
	ELSE
	BEGIN
		INSERT INTO XEPLOP(TENLOP, STT) VALUES (@TENLOP, @STT)

		DECLARE @TENLOP_OLD VARCHAR(5), @STT_OLD INT
		SELECT @TENLOP_OLD = (SELECT TENLOP FROM XEPLOP WHERE MAHS = @MAHS)
		SELECT @STT_OLD = (SELECT STT FROM XEPLOP WHERE MAHS = @MAHS)
		
		UPDATE BANGDIEM_MONHOC
		SET TENLOP = @TENLOP, STT = @STT
		WHERE TENLOP = @TENLOP_OLD AND STT = @STT_OLD

		DELETE FROM XEPLOP WHERE MAHS = @MAHS
	
		UPDATE XEPLOP
		SET MAHS = @MAHS
		WHERE TENLOP = @TENLOP AND STT = @STT
		----
		-- Cập nhật sĩ số lớp cũ
		UPDATE LOP
		SET SISO = (SELECT COUNT(*) FROM XEPLOP WHERE TENLOP = @TENLOP_TRUOC)
		WHERE TENLOP = @TENLOP_TRUOC
		END
		-- Cập nhật sĩ số lớp mới
		UPDATE LOP
		SET SISO = (SELECT COUNT(*) FROM XEPLOP WHERE TENLOP = @TENLOP)
		WHERE TENLOP = @TENLOP


	-- KIỂM TRA ĐÃ UPDATE THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi update thành công
	ELSE RETURN 0	-- Trả về 0 khi update không thành công
END

DROP PROC UPDATE_XEPLOP

-- DANH SÁCH LỚP 10A1
EXEC UPDATE_XEPLOP '10A1', 1, 'HS1125'
EXEC UPDATE_XEPLOP '10A1', 2, 'HS1124'
EXEC UPDATE_XEPLOP '10A1', 3, 'HS1126'
-- DANH SÁCH LỚP 10A2
EXEC UPDATE_XEPLOP '10A2', 1, 'HS1128'
EXEC UPDATE_XEPLOP '10A2', 2, 'HS1129'
EXEC UPDATE_XEPLOP '10A2', 3, 'HS1127'
-- DANH SÁCH LỚP 10A3
EXEC UPDATE_XEPLOP '10A3', 1, 'HS1132'
EXEC UPDATE_XEPLOP '10A3', 2, 'HS1131'
EXEC UPDATE_XEPLOP '10A3', 3, 'HS1130'
-- DANH SÁCH LỚP 10A4
EXEC UPDATE_XEPLOP '10A4', 1, 'HS1134'
EXEC UPDATE_XEPLOP '10A4', 2, 'HS1135'
EXEC UPDATE_XEPLOP '10A4', 3, 'HS1133'
-- DANH SÁCH LỚP 11A1
EXEC UPDATE_XEPLOP '11A1', 1, 'HS1137'
EXEC UPDATE_XEPLOP '11A1', 2, 'HS1136'
EXEC UPDATE_XEPLOP '11A1', 3, 'HS1138'
-- DANH SÁCH LỚP 11A2
EXEC UPDATE_XEPLOP '11A2', 1, 'HS1139'
EXEC UPDATE_XEPLOP '11A2', 2, 'HS1141'
EXEC UPDATE_XEPLOP '11A2', 3, 'HS1140'
-- DANH SÁCH LỚP 11A3
EXEC UPDATE_XEPLOP '11A3', 1, 'HS1143'
EXEC UPDATE_XEPLOP '11A3', 2, 'HS1142'
-- DANH SÁCH LỚP 12A1
EXEC UPDATE_XEPLOP '12A1', 1, 'HS1144'
EXEC UPDATE_XEPLOP '12A1', 2, 'HS1145'
-- DANH SÁCH LỚP 12A2
EXEC UPDATE_XEPLOP '12A2', 1, 'HS1147'
EXEC UPDATE_XEPLOP '12A2', 2, 'HS1146'

SELECT TENLOP, STT, MAHS FROM XEPLOP
ORDER BY TENLOP ASC
SELECT * FROM BANGDIEM_MONHOC
DELETE FROM XEPLOP

--------------------------------------------------------------
-- TẠO PROCEDURE SELECT BẢNG ĐIỂM MÔN HỌC CỦA TỪNG LỚP
CREATE PROCEDURE SELECT_BANGDIEM_MONHOC
@TENLOP VARCHAR(5), @TENMON NVARCHAR(50), @HOCKY VARCHAR(2)
AS
BEGIN
	SELECT XEPLOP.TENLOP, BANGDIEM_MONHOC.TENMON, HOCKY, HOCSINH.MAHS, XEPLOP.STT,
				CASE
					WHEN LEN(DEM) > 0 THEN CONCAT(HO, ' ', DEM, ' ', TEN)
					ELSE CONCAT(HO, ' ', TEN)
				END AS HOTEN,
	DIEM_15P, DIEM_1T, DIEM_TB
	FROM XEPLOP JOIN HOCSINH ON XEPLOP.MAHS = HOCSINH.MAHS
				JOIN BANGDIEM_MONHOC ON (XEPLOP.STT = BANGDIEM_MONHOC.STT AND XEPLOP.TENLOP = BANGDIEM_MONHOC.TENLOP)
	WHERE UPPER(XEPLOP.TENLOP) = UPPER(TRIM(@TENLOP))
	AND	UPPER(TENMON) = UPPER(TRIM(@TENMON))
	AND UPPER(HOCKY) = UPPER(TRIM(@HOCKY))
	ORDER BY STT ASC
END

DROP PROC SELECT_BANGDIEM_MONHOC
SELECT * FROM BANGDIEM_MONHOC
EXEC SELECT_BANGDIEM_MONHOC '10A2', N'Đạo đức', 'I'

--------------------------------------------------------------
-- TẠO PROCEDURE INSERT BẢNG ĐIỂM MÔN HỌC
CREATE PROCEDURE INSERT_BANGDIEM_MONHOC
@TENLOP VARCHAR(5), @TENMON NVARCHAR(20), @HOCKY VARCHAR(2), @STT INT, @DIEM15 FLOAT, @DIEM1T FLOAT, @DIEMTB FLOAT 
AS
BEGIN
	INSERT INTO BANGDIEM_MONHOC VALUES (
	@TENLOP, @TENMON, @HOCKY, @STT, @DIEM15, @DIEM1T, @DIEMTB)

	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END
DROP PROC INSERT_BANGDIEM_MONHOC
EXEC SELECT_BANGDIEM_MONHOC '10A3', N'ĐẠO ĐỨC', 'I'

--------------------------------------------------------------
-- TẠO PROCEDURE UPDATE BẢNG ĐIỂM MÔN HỌC
CREATE PROCEDURE UPDATE_BANGDIEM_MONHOC
@TENLOP VARCHAR(5), @TENMON NVARCHAR(20), @HOCKY VARCHAR(2), @STT INT, @DIEM15 FLOAT, @DIEM1T FLOAT, @DIEMTB FLOAT 
AS
BEGIN
	UPDATE BANGDIEM_MONHOC 
	SET DIEM_15P = @DIEM15, 
		DIEM_1T = @DIEM1T, 
		DIEM_TB = @DIEMTB
	WHERE TENLOP = @TENLOP AND TENMON = @TENMON AND HOCKY = @HOCKY AND STT = @STT

	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END

SELECT * FROM BANGDIEM_MONHOC
DROP PROC UPDATE_BANGDIEM_MONHOC
EXEC SELECT_BANGDIEM_MONHOC '10A1', N'ĐẠO ĐỨC', 'I'
EXEC UPDATE_BANGDIEM_MONHOC '10A1', N'ĐẠO ĐỨC', 'I', 1, 7.5, 8.5, 8.2

--------------------------------------------------------------
-- TẠO PROCEDURE SELECT BÁO CÁO MÔN HỌC
CREATE PROCEDURE SELECT_BAOCAO_MONHOC
@TENMON NVARCHAR(50), @HOCKY VARCHAR(2), @TENLOP VARCHAR(5)
AS
BEGIN
	SELECT TENMON, HOCKY, TENLOP, SISO, SL_DAT, TI_LE
	FROM BAOCAO_MONHOC
	WHERE UPPER(TENMON) = UPPER(TRIM(@TENMON))
	AND UPPER(HOCKY) = UPPER(TRIM(@HOCKY))
	AND UPPER(TENLOP) LIKE UPPER(TRIM(@TENLOP))
END
DROP PROC SELECT_BAOCAO_MONHOC
EXEC SELECT_BAOCAO_MONHOC N'Đạo đức', 'I', '%'
--------------------------------------------------------------
-- TẠO PROCEDURE INSERT BÁO CÁO MÔN HỌC
CREATE PROCEDURE INSERT_BAOCAO_MONHOC
@TENMON NVARCHAR(20), @HOCKY VARCHAR(2), @TENLOP VARCHAR(5), @SISO INT, @SL_DAT INT, @TI_LE FLOAT
AS
BEGIN
	INSERT INTO BAOCAO_MONHOC VALUES (@TENMON, @HOCKY, @TENLOP, @SISO, @SL_DAT, @TI_LE)

	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END
DROP PROC INSERT_BAOCAO_MONHOC
EXEC INSERT_BAOCAO_MONHOC N'Đạo Đức', 'I', '10A1', 4, 4, 100
EXEC INSERT_BAOCAO_MONHOC N'Đạo Đức', 'I', '10A2', 3, 3, 100
EXEC INSERT_BAOCAO_MONHOC N'Toán', 'I', '10A1', 4, 4, 100
SELECT * FROM BAOCAO_MONHOC
DELETE FROM BAOCAO_MONHOC

--------------------------------------------------------------
-- TẠO PROCEDURE DELETE BÁO CÁO MÔN HỌC
CREATE PROCEDURE DELETE_BAOCAO_MONHOC
@TENMON NVARCHAR(20), @HOCKY VARCHAR(2), @TENLOP VARCHAR(5)
AS
BEGIN
	DELETE FROM BAOCAO_MONHOC
	WHERE TENMON = @TENMON AND HOCKY = @HOCKY AND TENLOP = @TENLOP

	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END
DROP PROC DELETE_BAOCAO_MONHOC

--------------------------------------------------------------
-- TẠO PROCEDURE UPDATE BÁO CÁO MÔN HỌC
CREATE PROCEDURE UPDATE_BAOCAO_MONHOC
@TENMON NVARCHAR(20), @HOCKY VARCHAR(2), @TENLOP VARCHAR(5), @SISO INT, @SL_DAT INT, @TI_LE FLOAT
AS
BEGIN
	UPDATE BAOCAO_MONHOC
	SET SISO = @SISO, SL_DAT = @SL_DAT, TI_LE = @TI_LE
	WHERE TENMON = @TENMON AND HOCKY = @HOCKY AND TENLOP = @TENLOP

	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END

--------------------------------------------------------------

-- TẠO PROCEDURE SELECT BÁO CÁO HỌC KỲ
CREATE PROCEDURE SELECT_BAOCAO_HOCKY
@TENLOP VARCHAR(5), @HOCKY VARCHAR(2)
AS
BEGIN
	SELECT *
	FROM BAOCAO_HOCKY
	WHERE UPPER(TENLOP) = UPPER(TRIM(@TENLOP))
	AND UPPER(HOCKY) = UPPER(TRIM(@HOCKY))
END
DROP PROC SELECT_BAOCAO_HOCKY
SELECT * FROM BAOCAO_HOCKY
--------------------------------------------------------------
-- TẠO PROCEDURE INSERT BÁO CÁO HỌC KỲ
CREATE PROCEDURE INSERT_BAOCAO_HOCKY
@HOCKY VARCHAR(2), @TENLOP VARCHAR(5), @SISO INT, @SL_DAT INT, @TI_LE FLOAT
AS
BEGIN
	INSERT INTO BAOCAO_HOCKY VALUES (@HOCKY, @TENLOP, @SISO, @SL_DAT, @TI_LE)

	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END
DROP PROC INSERT_BAOCAO_HOCKY

---------------------------------------------------------------
-- TẠO PROCEDURE DELETE BÁO CÁO HỌC KỲ
CREATE PROCEDURE DELETE_BAOCAO_HOCKY
@TENLOP VARCHAR(5), @HOCKY VARCHAR(2)
AS
BEGIN
	DELETE FROM BAOCAO_HOCKY
	WHERE HOCKY = @HOCKY AND TENLOP = @TENLOP

	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END
DROP PROC DELETE_BAOCAO_HOCKY
--------------------------------------------------------------

-- TẠO PROCEDURE UPDATE BÁO CÁO HỌC KỲ
CREATE PROCEDURE UPDATE_BAOCAO_HOCKY
@TENLOP VARCHAR(5), @HOCKY VARCHAR(2), @SISO INT, @SL_DAT INT, @TI_LE FLOAT
AS
BEGIN
	UPDATE BAOCAO_HOCKY
	SET SISO = @SISO, SL_DAT = @SL_DAT, TI_LE = @TI_LE
	WHERE HOCKY = @HOCKY AND TENLOP = @TENLOP

	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END
DROP PROC UPDATE_BAOCAO_HOCKY
--------------------------------------------------------------

-- TẠO PROCEDURE SELECT BẢNG ĐIỂM TRUNG BÌNH CỦA TỪNG LỚP
CREATE PROCEDURE SELECT_DTB
@TENLOP VARCHAR(5), @HOCKY VARCHAR(2)
AS
BEGIN
	SELECT XEPLOP.TENLOP, HOCKY, XEPLOP.STT, HOCSINH.MAHS,
				CASE
					WHEN LEN(DEM) > 0 THEN CONCAT(HO, ' ', DEM, ' ', TEN)
					ELSE CONCAT(HO, ' ', TEN)
				END AS HOTEN,
	AVG(DIEM_TB) AS DIEM_TB
	FROM XEPLOP JOIN HOCSINH ON XEPLOP.MAHS = HOCSINH.MAHS
				JOIN BANGDIEM_MONHOC ON (XEPLOP.STT = BANGDIEM_MONHOC.STT AND XEPLOP.TENLOP = BANGDIEM_MONHOC.TENLOP)
	WHERE UPPER(XEPLOP.TENLOP) = UPPER(TRIM(@TENLOP))
	AND UPPER(HOCKY) = UPPER(TRIM(@HOCKY))
	GROUP BY XEPLOP.TENLOP, HOCKY, XEPLOP.STT, HOCSINH.MAHS, HO, DEM, TEN
	ORDER BY STT ASC

	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END

DROP PROC SELECT_DTB

--------------------------------------------------------------

-- TẠO PROCEDURE TRA CỨU HỌC SINH GỒM CÁC THÔNG TIN: HỌ TÊN, LỚP, TB_HKI, TB_HKII
-- CHO PHÉP NGƯỜI DÙNG TÌM THEO TÊN HS, TÊN LỚP
CREATE PROCEDURE SELECT_TRACUU
@TENHS NVARCHAR(50), @TENLOP VARCHAR(5)
AS
BEGIN
	
	SELECT HKI.MAHS, HKI.TENLOP, HKI.STT, HKI.HOTEN, TB_HKI, TB_HKII
	FROM
	(
		SELECT HOCSINH.MAHS, XEPLOP.TENLOP, XEPLOP.STT,
					CASE
						WHEN LEN(DEM) > 0 THEN CONCAT(HO, ' ', DEM, ' ', TEN)
						ELSE CONCAT(HO, ' ', TEN)
					END AS HOTEN, AVG(DIEM_TB) AS TB_HKI
		FROM XEPLOP JOIN HOCSINH ON XEPLOP.MAHS = HOCSINH.MAHS
					JOIN BANGDIEM_MONHOC ON (XEPLOP.STT = BANGDIEM_MONHOC.STT AND XEPLOP.TENLOP = BANGDIEM_MONHOC.TENLOP)
		WHERE HOCKY = 'I' AND BANGDIEM_MONHOC.TENLOP = @TENLOP AND
		(		  UPPER(HO) LIKE UPPER(N'%' + TRIM(@TENHS) + N'%')	-- tìm theo họ
			OR	  UPPER(DEM) LIKE UPPER(N'%' + TRIM(@TENHS) + N'%')	-- tìm theo tên đệm
			OR	  UPPER(TEN) LIKE UPPER(N'%' + TRIM(@TENHS) + N'%')	-- tìm theo tên
			OR	  UPPER(CONCAT(HO, ' ', DEM, ' ', TEN)) LIKE UPPER(N'%' + TRIM(@TENHS) + N'%')	-- tìm theo họ tên đầy đủ (có tên đệm)
			OR    UPPER(CONCAT(HO, ' ', TEN)) LIKE UPPER(N'%' + TRIM(@TENHS) + N'%')	-- tìm theo họ tên đầy đủ (không tên đệm)
			OR    UPPER(CONCAT(DEM, ' ', TEN)) LIKE UPPER(N'%' + TRIM(@TENHS) + N'%')	-- tìm theo tên đệm và tên
		)
		GROUP BY XEPLOP.TENLOP, XEPLOP.STT, HOCSINH.MAHS, HO, DEM, TEN
	) HKI

		JOIN

	(
		SELECT HOCSINH.MAHS, XEPLOP.TENLOP, XEPLOP.STT,
					CASE
						WHEN LEN(DEM) > 0 THEN CONCAT(HO, ' ', DEM, ' ', TEN)
						ELSE CONCAT(HO, ' ', TEN)
					END AS HOTEN, AVG(DIEM_TB) AS TB_HKII
		FROM XEPLOP JOIN HOCSINH ON XEPLOP.MAHS = HOCSINH.MAHS
					JOIN BANGDIEM_MONHOC ON (XEPLOP.STT = BANGDIEM_MONHOC.STT AND XEPLOP.TENLOP = BANGDIEM_MONHOC.TENLOP)
		WHERE HOCKY = 'II' AND BANGDIEM_MONHOC.TENLOP = @TENLOP AND
		(		  UPPER(HO) LIKE UPPER(N'%' + TRIM(@TENHS) + N'%')	-- tìm theo họ
			OR	  UPPER(DEM) LIKE UPPER(N'%' + TRIM(@TENHS) + N'%')	-- tìm theo tên đệm
			OR	  UPPER(TEN) LIKE UPPER(N'%' + TRIM(@TENHS) + N'%')	-- tìm theo tên
			OR	  UPPER(CONCAT(HO, ' ', DEM, ' ', TEN)) LIKE UPPER(N'%' + TRIM(@TENHS) + N'%')	-- tìm theo họ tên đầy đủ (có tên đệm)
			OR    UPPER(CONCAT(HO, ' ', TEN)) LIKE UPPER(N'%' + TRIM(@TENHS) + N'%')	-- tìm theo họ tên đầy đủ (không tên đệm)
			OR    UPPER(CONCAT(DEM, ' ', TEN)) LIKE UPPER(N'%' + TRIM(@TENHS) + N'%')	-- tìm theo tên đệm và tên
		)
		GROUP BY XEPLOP.TENLOP, XEPLOP.STT, HOCSINH.MAHS, HO, DEM, TEN
	) HKII

	ON HKI.MAHS = HKII.MAHS

	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END
DROP PROC SELECT_TRACUU
EXEC SELECT_TRACUU N'TRẦN GIA BẢO', '10A1'
SELECT * FROM LOP

--------------------------------------------------------------

-- TẠO PROCEDURE UPDATE QUY ĐỊNH
CREATE PROCEDURE UPDATE_QUYDINH
@MAQD CHAR(4), @GIATRI FLOAT
AS
BEGIN
	UPDATE QUYDINH
	SET GIATRI = @GIATRI
	WHERE MAQD = @MAQD

	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END
DROP PROC UPDATE_QUYDINH
SELECT * FROM QUYDINH

EXEC UPDATE_QUYDINH 'QD02', 20

--------------------------------------------------------------

-- TẠO PROCEDURE SELECT DANH SÁCH MÔN HỌC
CREATE PROCEDURE SELECT_MONHOC
@PARAM NVARCHAR(50)
AS
BEGIN
	SELECT * FROM MONHOC
	WHERE MAMON LIKE UPPER(TRIM(@PARAM)) 
	OR TENMON LIKE UPPER(N'%' + TRIM(@PARAM) + N'%')
	ORDER BY MAMON ASC

	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END
DROP PROC SELECT_MONHOC
EXEC SELECT_MONHOC '%'

--------------------------------------------------------------

-- TẠO PROCEDURE SELECT DANH SÁCH MÔN HỌC (DOUBLE_CLICK)
CREATE PROCEDURE SELECT_MONHOC_DBCLICK
@MAMON NVARCHAR(50)
AS
BEGIN
	SELECT * FROM MONHOC
	WHERE MAMON LIKE UPPER(TRIM(@MAMON))

	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END
DROP PROC SELECT_MONHOC
EXEC SELECT_MONHOC '%'

--------------------------------------------------------------
-- TẠO PROCEDURE INSERT MÔN HỌC
CREATE PROCEDURE INSERT_MONHOC
@MAMON CHAR(3), @TENMON NVARCHAR(50)
AS
BEGIN
	INSERT INTO MONHOC VALUES (UPPER(TRIM(@MAMON)), TRIM(@TENMON))

	DECLARE @MAHS CHAR(6), @TENLOP VARCHAR(5), @STT INT

	DECLARE MAHS_CURSOR CURSOR FOR
		SELECT DISTINCT(MAHS) FROM XEPLOP
	OPEN MAHS_CURSOR;
	FETCH NEXT FROM MAHS_CURSOR INTO @MAHS;
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SELECT @TENLOP = (SELECT TENLOP FROM XEPLOP WHERE MAHS = @MAHS)
		SELECT @STT = (SELECT STT FROM XEPLOP WHERE MAHS = @MAHS)

		INSERT INTO BANGDIEM_MONHOC VALUES (@TENLOP,TRIM(@TENMON), 'I', @STT, NULL, NULL, NULL)
		INSERT INTO BANGDIEM_MONHOC VALUES (@TENLOP, TRIM(@TENMON), 'II', @STT, NULL, NULL, NULL)
		FETCH NEXT FROM MAHS_CURSOR INTO @MAHS;
	END
	CLOSE MAHS_CURSOR;
	DEALLOCATE MAHS_CURSOR;


	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END
DROP PROC INSERT_MONHOC
SELECT * FROM HOCSINH
SELECT * FROM BANGDIEM_MONHOC

--------------------------------------------------------------
-- TẠO PROCEDURE UPDATE MÔN HỌC
CREATE PROCEDURE UPDATE_MONHOC
@MAMON CHAR(3), @TENMON NVARCHAR(50)
AS
BEGIN
	DECLARE @TENMON_OLD NVARCHAR(50)
	SELECT @TENMON_OLD = (SELECT TENMON FROM MONHOC WHERE MAMON = @MAMON)

	INSERT INTO MONHOC VALUES ('M99', @TENMON)

	UPDATE BANGDIEM_MONHOC
	SET TENMON = @TENMON
	WHERE TENMON = @TENMON_OLD

	
	UPDATE BAOCAO_MONHOC
	SET TENMON = @TENMON
	WHERE TENMON = @TENMON_OLD

	DELETE FROM MONHOC
	WHERE MAMON = @MAMON
	
	UPDATE MONHOC
	SET MAMON = @MAMON
	WHERE TENMON = @TENMON

	-- KIỂM TRA ĐÃ UPDATE THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi update thành công
	ELSE RETURN 0	-- Trả về 0 khi update không thành công
END
DROP PROC UPDATE_MONHOC
SELECT * FROM MONHOC ORDER BY MAMON ASC

EXEC UPDATE_MONHOC 'M01', 'Toán'

SELECT * FROM BANGDIEM_MONHOC
--------------------------------------------------------------
-- TẠO PROCEDURE DELETE MÔN HỌC
CREATE PROCEDURE DELETE_MONHOC
@TENMON NVARCHAR(50)
AS
BEGIN
	DELETE FROM BAOCAO_MONHOC
	WHERE TENMON = @TENMON

	DELETE FROM BANGDIEM_MONHOC
	WHERE TENMON = @TENMON

	DELETE FROM MONHOC
	WHERE TENMON = @TENMON
END


--------------------------------------------------------------
-- TẠO PROCEDURE SELECT DANH SÁCH KHỐI LỚP
CREATE PROCEDURE SELECT_LOP
@PARAM NVARCHAR(50)
AS
BEGIN
	SELECT MAKHOI, TENLOP, SISO 
	FROM LOP
	WHERE MAKHOI LIKE UPPER(TRIM(@PARAM)) 
	OR TENLOP LIKE UPPER(TRIM(@PARAM))
	ORDER BY TENLOP ASC

	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END
DROP PROC SELECT_LOP
EXEC SELECT_LOP '%'

--------------------------------------------------------------

-- TẠO PROCEDURE SELECT DANH SÁCH KHỐI LỚP (DOUBLE_CLICK)
CREATE PROCEDURE SELECT_LOP_DBCLICK
@TENLOP NVARCHAR(50)
AS
BEGIN
	SELECT MAKHOI, TENLOP FROM LOP
	WHERE TENLOP LIKE UPPER(TRIM(@TENLOP))

	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END
DROP PROC SELECT_LOP
EXEC SELECT_LOP '%'

--------------------------------------------------------------
-- TẠO PROCEDURE INSERT KHỐI LỚP
CREATE PROCEDURE INSERT_LOP
@TENLOP VARCHAR(5), @MAKHOI CHAR(3)
AS
BEGIN
	INSERT INTO LOP(TENLOP, MAKHOI) VALUES (UPPER(TRIM(@TENLOP)), UPPER(TRIM(@MAKHOI)))

	UPDATE KHOILOP
	SET SL_LOP = (SELECT COUNT(*) FROM LOP WHERE MAKHOI = @MAKHOI)
	WHERE MAKHOI = @MAKHOI
	-- KIỂM TRA ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi insert thành công
	ELSE RETURN 0	-- Trả về 0 khi insert không thành công
END
DROP PROC INSERT_LOP
EXEC INSERT_LOP '10A4', 'K10'
SELECT * FROM LOP
SELECT * FROM KHOILOP
--------------------------------------------------------------
-- TẠO PROCEDURE UPDATE KHỐI LỚP
CREATE PROCEDURE UPDATE_LOP
@TENLOP VARCHAR(5), @MAKHOI CHAR(3), @TENLOP_OLD VARCHAR(5)
AS
BEGIN
	-- THÊM LỚP MỚI VÀO BẢNG LOP
	INSERT INTO LOP (TENLOP, MAKHOI) VALUES (@TENLOP, @MAKHOI)

	-- THÊM LẠI DANH SÁCH LỚP MỚI (CHỈNH SỬA TÊN LỚP CŨ THÀNH TÊN LỚP MỚI)
	DECLARE @MAHS CHAR(6), @STT INT
	DECLARE MAHS_CURSOR CURSOR
		FOR SELECT MAHS FROM XEPLOP WHERE TENLOP = @TENLOP_OLD
	OPEN MAHS_CURSOR
	FETCH NEXT FROM MAHS_CURSOR INTO @MAHS
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SELECT @STT = (SELECT STT FROM XEPLOP WHERE MAHS = @MAHS)
		INSERT INTO XEPLOP VALUES (@TENLOP, @STT, @MAHS)
		FETCH NEXT FROM MAHS_CURSOR INTO @MAHS
	END
	CLOSE MAHS_CURSOR
	DEALLOCATE MAHS_CURSOR

	-- CẬP NHẬT LẠI TÊN LỚP Ở CÁC BẢNG CÓ LIÊN QUAN
	UPDATE BANGDIEM_MONHOC
	SET TENLOP = @TENLOP
	WHERE TENLOP = @TENLOP_OLD

	UPDATE BAOCAO_MONHOC
	SET TENLOP = @TENLOP
	WHERE TENLOP = @TENLOP_OLD

	UPDATE BAOCAO_HOCKY
	SET TENLOP = @TENLOP
	WHERE TENLOP = @TENLOP_OLD

	-- XOÁ DANH SÁCH XẾP LỚP CŨ
	DELETE FROM XEPLOP
	WHERE TENLOP = @TENLOP_OLD

	-- CẬP NHẬT SĨ SỐ LỚP SAU KHI ĐỔI TÊN
	UPDATE LOP
	SET SISO = (SELECT SISO FROM LOP WHERE TENLOP = @TENLOP_OLD)
	WHERE TENLOP = @TENLOP

	-- XOÁ DANH SÁCH LỚP CŨ
	DELETE FROM LOP
	WHERE TENLOP = @TENLOP_OLD


	-- KIỂM TRA ĐÃ UPDATE THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi update thành công
	ELSE RETURN 0	-- Trả về 0 khi update không thành công
END
DROP PROC UPDATE_LOP
DELETE FROM LOP WHERE TENLOP = '10CL'
EXEC UPDATE_LOP '10A4', 'K10', '10CL'

SELECT * FROM LOP 
SELECT * FROM XEPLOP ORDER BY TENLOP ASC
SELECT * FROM BANGDIEM_MONHOC
SELECT * FROM BAOCAO_MONHOC
--------------------------------------------------------------
-- TẠO PROCEDURE DELETE KHỐI LỚP (CHƯA XONG)
CREATE PROCEDURE DELETE_LOP
@TENLOP VARCHAR(5)
AS
BEGIN
	DELETE FROM BAOCAO_MONHOC
	WHERE TENLOP = @TENLOP

	DELETE FROM BAOCAO_HOCKY
	WHERE TENLOP = @TENLOP

	DELETE FROM BANGDIEM_MONHOC
	WHERE TENLOP = @TENLOP

	DELETE FROM XEPLOP
	WHERE TENLOP = @TENLOP

	DELETE FROM LOP
	WHERE TENLOP = @TENLOP

	-- KIỂM TRA ĐÃ DELETE THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi delete thành công
	ELSE RETURN 0	-- Trả về 0 khi delete không thành công

END
DROP PROC DELETE_LOP

EXEC DELETE_LOP '10A6'


--=========================================================--
-- TẠO PROCEDURE CẬP NHẬT MẬT KHẨU NGƯỜI DÙNG 
CREATE PROCEDURE UPDATE_USERS
@TAIKHOAN VARCHAR(20), @MATKHAU VARCHAR(20)
AS
BEGIN
	UPDATE USERS
	SET MATKHAU = @MATKHAU
	WHERE TAIKHOAN = @TAIKHOAN

	-- KIỂM TRA ĐÃ UPDATE THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT > 0 return 1	-- Trả về 1 khi update thành công
	ELSE RETURN 0	-- Trả về 0 khi update không thành công
END
DROP PROC UPDATE_USERS

--=========================================================--
-- TẠO PROCEDURE SELECT 1 DÒNG DỮ LIỆU TỪ BẢNG USER  
CREATE PROCEDURE SELECT_USERS_DBCLICK
@TEN_USER NVARCHAR(20)
AS
BEGIN
	SELECT * FROM USERS
	WHERE UPPER(TEN_USER) = UPPER(@TEN_USER)

	IF @@ROWCOUNT > 0 return 1	
	ELSE RETURN 0	

END
DROP PROC SELECT_USERS_DBCLICK

EXEC SELECT_TRACUU 'NAM', '10A1'